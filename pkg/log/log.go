package log

import (
	"encoding/json"
	"io"

	v1 "k8s.io/api/core/v1"

	kubeutil "github.com/lrx0014/log-tools/pkg/util/kube"
	"k8s.io/client-go/kubernetes"
	"k8s.io/client-go/kubernetes/scheme"
	"k8s.io/klog/glog"
)

type AuthInfo struct {
	ClusterURL               string `json:"clusterUrl"`
	CertificateAuthorityData []byte `json:"certificateAuthorityData"`
	ClientCertificateData    []byte `json:"clientCertificateData"`
	ClientKeyData            []byte `json:"clientKeyData"`
}

func CreateClient() (kubernetes.Interface, error) {

	jsonStr := `
	{
		"clusterUrl": "https://ruyiyundev01.jqpreh.c.saic-gm.net:8443",
		"certificateAuthorityData": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUM2akNDQWRLZ0F3SUJBZ0lCQVRBTkJna3Foa2lHOXcwQkFRc0ZBREFtTVNRd0lnWURWUVFEREJ0dmNHVnUKYzJocFpuUXRjMmxuYm1WeVFERTFOVEU1TlRJNU5USXdIaGNOTVRrd016QTNNVEF3TWpNeFdoY05NalF3TXpBMQpNVEF3TWpNeVdqQW1NU1F3SWdZRFZRUUREQnR2Y0dWdWMyaHBablF0YzJsbmJtVnlRREUxTlRFNU5USTVOVEl3CmdnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUUR6QUx6ZGlzd0hwYmxqYWVpc1djN1QKOGl0dTZ5VkxMRythTWVZN0RzN1dXcWtmWTluNVdFb2ZHVFNqV3JIOUNDZ09vb0hQcTlKVkkrRE9Dc0hOQXFWNQpIL3Q3REdxTHRoRmpoWGRjTHBHbVdZL0NjU3V4dWtDNFNQdVh6WUw1ZFFPd1J1ampQaXE0T0RzSFF3anRPeWlJCmVPanlualhUbEJaWkZ5Uys4RFpESm1ldTZ6ZVVUdzlETmE5RFoxalAvOXc1MG0zYWw0cGxjM2czWUlIS3gxaWQKZEpsOTd5SXJ5a0FTSHpoVDkxZXY2UVNGNG96UkVNOHVJckJRdTRtR2dLMFNrU3VTV1gySXYxZ1VkZlZ0a1VuVgpNSlFBK0JTOFpibjE3Z0Vyb0t6SFhlbHBLZWpEZmxidnNsSVNzdTNWRnN4bVVxTE5jdFAyT0RLRVlSZGRDc3ZkCkFnTUJBQUdqSXpBaE1BNEdBMVVkRHdFQi93UUVBd0lDcERBUEJnTlZIUk1CQWY4RUJUQURBUUgvTUEwR0NTcUcKU0liM0RRRUJDd1VBQTRJQkFRRHlDdmdUSmRxUkJIdlVEc3VhUWtzZnZmT016KzFMY1RkdnVGeFhTSEl3RFd0UQpyRkl0V1YyVU14SS82OEpyVTFjMlN6S3BmaUxqcnhZYjRaZEtnUXF5ckxJUHpYbUxFYWNscWxDZ1Fnd28vMld2CkovclJ3eW9zUDVoVllwRy91cDRYNS9EWGJBTSttOEtzeVZBMjMwMVIzdUFGWGErQzZtTis3akEzSXhERUVnZngKMmxaVFF6dFBwb2ZJOCtsWERaeUEwSkF5dFVCbkhqYlJxc3k1M3RrcWpWa1JwUEtrL094bWxyYkRwTGlWYnIyYwpDVEcwZU5qa0JLd1pWS1ZmTnNmQzM5clNVUFdLbTg3YmQxY2xKQlAzNE1Vd01TaEo3ajlwNTI1TDF3MFdUQkc4CjFKNUtiQnEzTnlWUVgyamp0UzF4aFBlTnNaaDlHbDVvVWl3RU84MFYKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=",
		"clientCertificateData": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKRENDQWd5Z0F3SUJBZ0lCQlRBTkJna3Foa2lHOXcwQkFRc0ZBREFtTVNRd0lnWURWUVFEREJ0dmNHVnUKYzJocFpuUXRjMmxuYm1WeVFERTFOVEU1TlRJNU5USXdIaGNOTVRrd016QTNNVEF3TWpNeVdoY05NakV3TXpBMgpNVEF3TWpNeldqQk9NVFV3RlFZRFZRUUtFdzV6ZVhOMFpXMDZiV0Z6ZEdWeWN6QWNCZ05WQkFvVEZYTjVjM1JsCmJUcGpiSFZ6ZEdWeUxXRmtiV2x1Y3pFVk1CTUdBMVVFQXhNTWMzbHpkR1Z0T21Ga2JXbHVNSUlCSWpBTkJna3EKaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUF4R1RBenBtckZTYTBoTEZDNS9ESmdSbnhlWnhmOW05ego3YUpRU1k3b0FHMGJHR0tJMlhVNWRYQkNnSUVzWW40V1g4NjE2R21wMC9Galp3b0VsbnVFZ2MyVXR1MGhSY05NClV6WDMyQW1YSENrRW5DblUxemlDREFnWE5JeTIwZ0hLMm1wdm03cnN5eFhwOWQzQm1QdC9xSk1BM1hnazhjclIKc3EwUmV0dXZOUFFwYmZjeTJ2TVB2WUNVWllFQ1g3UzBpZUZvcGFhYmNleExwWFc3MXBwYkNZaHdQZ05Rc0ZrcgppcjFHRVJUSml2alRUeFN5bVN3dTBIRzA3NlRleWZBbW13dWdjYmc3Q3g0NXU2TUtCSXFobU1YWHVCcm9xUGEwCk16diswcHRGaWVQbi9WcDV1a09jUU1waTVSWXVKQjh4UGVueFV6MGJ4anUrMzM4YndjUmtrUUlEQVFBQm96VXcKTXpBT0JnTlZIUThCQWY4RUJBTUNCYUF3RXdZRFZSMGxCQXd3Q2dZSUt3WUJCUVVIQXdJd0RBWURWUjBUQVFILwpCQUl3QURBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQTBkL2dJREExQ2lUaFBseDFWN2sweDBnRGxsVkhYdlNKCml5VmVEN3VqekNpY1dvTmZiTmtXOUdReDN5NVJVUXFQS1BEb3JLYmtWYWJLMkRzZnBscHcxTW9IdEVBeWFkTUwKSm1ERkVhMVUxUDczNVJ6U3RsRVp1ZlYyQnZ3SERxKzRyZmRqbGc5czA3SUxtMWRxaWxoVEdEdU53UnkvenkrUgpaYmpjZDI2M3E5R3JNbGgrUVpzYnNLWW0wWWdmRHRWekFuc2ZrWitSYldNUVNaVm1zc3p5WFYrQlVYL2F3SGxBCm1mTllJTGVDak5GdHR6c3JxSTdpNW0zSEZ5aDgrWHF4c2hBMmJDTW8yMk4wYnNQc0pzb25RWXRBSVczci9VUEYKV2NTRmtzQndkU0NZY3piZFRiamg1Q0I0eGZUdTFEeUs0OUk3b2g0dFYzVEgrc0VJQlp0TGxnPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=",
		"clientKeyData": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBeEdUQXpwbXJGU2EwaExGQzUvREpnUm54ZVp4ZjltOXo3YUpRU1k3b0FHMGJHR0tJCjJYVTVkWEJDZ0lFc1luNFdYODYxNkdtcDAvRmpad29FbG51RWdjMlV0dTBoUmNOTVV6WDMyQW1YSENrRW5DblUKMXppQ0RBZ1hOSXkyMGdISzJtcHZtN3JzeXhYcDlkM0JtUHQvcUpNQTNYZ2s4Y3JSc3EwUmV0dXZOUFFwYmZjeQoydk1QdllDVVpZRUNYN1MwaWVGb3BhYWJjZXhMcFhXNzFwcGJDWWh3UGdOUXNGa3JpcjFHRVJUSml2alRUeFN5Cm1Td3UwSEcwNzZUZXlmQW1td3VnY2JnN0N4NDV1Nk1LQklxaG1NWFh1QnJvcVBhME16diswcHRGaWVQbi9WcDUKdWtPY1FNcGk1Ull1SkI4eFBlbnhVejBieGp1KzMzOGJ3Y1Jra1FJREFRQUJBb0lCQVFDVUljcXNDb3hZYjlGSgpKTXJxVjF3bDNJT2V6cXd6SE8yOEYrbW5FZnM4RncrUTNRR0x4RGVLdFJuMEEzcU83N3ZBbUJIdE00VzlMeDFpCjR0T0REYmRza0x2VEhoa3luWlE4VDBDWjJ1SDNnNWpPa1Y3UTF2YUFUTG4wRVE3MGFCV3htUWFGMkFBelRsd2gKN3huUFlpTnY2ekdEMnROQzdWQXVEUXhhTnNsNGpqOFY1eVE2M0xDR09iQUx2S0lKc2x5NXlCR2MvclpxOGhDNgptY2tLZ0l5MmRKdEIwK2YrcmcxWmtqbG5HRnRTdjI2T05TQ1VQL0JBZEgzTFRUYUc5d1E3aGVOZllqQzh0WUMxCnVjeXdSamhWSFY2OWhNdWY5OVMrLzc1dmJyOUdJRTFDcGZFdmRSRHd6Nlo5UzZBMXVIRk1aSXlOR1dib3hFL2wKNmc3Y3NlNkJBb0dCQU9pazBLak5COGVuLyt1UHVQalBFNWFBVFFHVlJhTkNHRXZReklVRTgyTDlJcFhQdTY3dgptdlM2UGJJSGVsRStyTWdWT3hLWkxKYkdUTWVmMkVuZ1lqOU5BYldQZlRZREdWNkdvaEM5R3cxSEkxTjVWNXpTCkVwdzRUVGVDU01FT21xUzJURzQ5eXI5elRpa0VCUWdlUUVXbmFMS01nSCtxaHlaQk1qNjJEcHoxQW9HQkFOZ2MKUlFWc3FveWkrZzl1UTIzckxJb21ZLzUzZjN4M1lGanNneFErVzZidXIyemExUnVyZjh4Mnd3TVFtSmZQaVB0SgpreDNHdlJNTGtkdDB4L2t4dlQ0QmkvbGJiWVhpNS80VEx2TURKS0RRVE53RmtmempyTmVhWUVVNXpIUmhtZlBCCndZQ3FZdWIyMUhvY3pJMWlyQXhxMlIxZjZwNVZrVUNicmhPVEx5ZXRBb0dBVUxub0lickxpVTlWY1pMMGwzbWIKald6Rnk5ZlZTenBESGdPOUJDZGNvU3UvVllhNDFKSVdEZmVXTXZGL1V6UFJWcmh2UUJ2Z3FnenpWWTIweXFYTwowYkpSOW9OczZsSVcrb0x6TjZXMi9sdUIrWlF3ZjUweGtmM0RaWkNTMkZMTi9IdTVkOE4vV0FHVnpJdTFoMFNmCi9zdUJlL3RmRjIyLzZkbFRxd2tYZHdVQ2dZRUFtSWNEVS92Sk42K0RqRWFIZ3RuOE9wa3o5Qk1GUUtURXRKNWgKT1hWMW5KRlQ4U0ZXVGN3eVMrMzZYM3hrSnFtTWhjYjg5WVFpU0lIZTlTUXNTNzRHVWZBbmlkdzBwYzFyYmRDKwpUemdGcnhhMVdJajU2NklKaUxabGdoWjBMaVFBMDZFSjRMVGhUeUFoQVBxNGlJVis1dGkyMmx1ckxRczVsSDhNClVyYU1EcFVDZ1lCYkZSVWYrdm9HWjMzeFpibExWUU4yS0hzclRQTUJCTGxHTzErWmhJOENTS1BWbHRUOTV2aXkKcFRMc0swalRyTjNzMEFmb2RYeDI1NGlzOTNlMzJqM1NsY1dBempicGN4NG9UYmZMdER2TXliR3d4ZVRjTWd0YQphQ0d4MldEa0pJSHdVNVhiUmlGaUdBYjZ2VmtER2JpbTl4ZmcrcGFack5RL3h1RGIycDdxc1E9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo="
	}`

	auth := &AuthInfo{}
	if err := json.Unmarshal([]byte(jsonStr), auth); err != nil {
		return nil, err
	}

	// auth := &AuthInfo{
	// 	ClusterURL:               "https://ruyiyundev01.jqpreh.c.saic-gm.net:8443",
	// 	CertificateAuthorityData: []byte("LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUM2akNDQWRLZ0F3SUJBZ0lCQVRBTkJna3Foa2lHOXcwQkFRc0ZBREFtTVNRd0lnWURWUVFEREJ0dmNHVnUKYzJocFpuUXRjMmxuYm1WeVFERTFOVEU1TlRJNU5USXdIaGNOTVRrd016QTNNVEF3TWpNeFdoY05NalF3TXpBMQpNVEF3TWpNeVdqQW1NU1F3SWdZRFZRUUREQnR2Y0dWdWMyaHBablF0YzJsbmJtVnlRREUxTlRFNU5USTVOVEl3CmdnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUUR6QUx6ZGlzd0hwYmxqYWVpc1djN1QKOGl0dTZ5VkxMRythTWVZN0RzN1dXcWtmWTluNVdFb2ZHVFNqV3JIOUNDZ09vb0hQcTlKVkkrRE9Dc0hOQXFWNQpIL3Q3REdxTHRoRmpoWGRjTHBHbVdZL0NjU3V4dWtDNFNQdVh6WUw1ZFFPd1J1ampQaXE0T0RzSFF3anRPeWlJCmVPanlualhUbEJaWkZ5Uys4RFpESm1ldTZ6ZVVUdzlETmE5RFoxalAvOXc1MG0zYWw0cGxjM2czWUlIS3gxaWQKZEpsOTd5SXJ5a0FTSHpoVDkxZXY2UVNGNG96UkVNOHVJckJRdTRtR2dLMFNrU3VTV1gySXYxZ1VkZlZ0a1VuVgpNSlFBK0JTOFpibjE3Z0Vyb0t6SFhlbHBLZWpEZmxidnNsSVNzdTNWRnN4bVVxTE5jdFAyT0RLRVlSZGRDc3ZkCkFnTUJBQUdqSXpBaE1BNEdBMVVkRHdFQi93UUVBd0lDcERBUEJnTlZIUk1CQWY4RUJUQURBUUgvTUEwR0NTcUcKU0liM0RRRUJDd1VBQTRJQkFRRHlDdmdUSmRxUkJIdlVEc3VhUWtzZnZmT016KzFMY1RkdnVGeFhTSEl3RFd0UQpyRkl0V1YyVU14SS82OEpyVTFjMlN6S3BmaUxqcnhZYjRaZEtnUXF5ckxJUHpYbUxFYWNscWxDZ1Fnd28vMld2CkovclJ3eW9zUDVoVllwRy91cDRYNS9EWGJBTSttOEtzeVZBMjMwMVIzdUFGWGErQzZtTis3akEzSXhERUVnZngKMmxaVFF6dFBwb2ZJOCtsWERaeUEwSkF5dFVCbkhqYlJxc3k1M3RrcWpWa1JwUEtrL094bWxyYkRwTGlWYnIyYwpDVEcwZU5qa0JLd1pWS1ZmTnNmQzM5clNVUFdLbTg3YmQxY2xKQlAzNE1Vd01TaEo3ajlwNTI1TDF3MFdUQkc4CjFKNUtiQnEzTnlWUVgyamp0UzF4aFBlTnNaaDlHbDVvVWl3RU84MFYKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="),
	// 	ClientCertificateData:    []byte("LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKRENDQWd5Z0F3SUJBZ0lCQlRBTkJna3Foa2lHOXcwQkFRc0ZBREFtTVNRd0lnWURWUVFEREJ0dmNHVnUKYzJocFpuUXRjMmxuYm1WeVFERTFOVEU1TlRJNU5USXdIaGNOTVRrd016QTNNVEF3TWpNeVdoY05NakV3TXpBMgpNVEF3TWpNeldqQk9NVFV3RlFZRFZRUUtFdzV6ZVhOMFpXMDZiV0Z6ZEdWeWN6QWNCZ05WQkFvVEZYTjVjM1JsCmJUcGpiSFZ6ZEdWeUxXRmtiV2x1Y3pFVk1CTUdBMVVFQXhNTWMzbHpkR1Z0T21Ga2JXbHVNSUlCSWpBTkJna3EKaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUF4R1RBenBtckZTYTBoTEZDNS9ESmdSbnhlWnhmOW05ego3YUpRU1k3b0FHMGJHR0tJMlhVNWRYQkNnSUVzWW40V1g4NjE2R21wMC9Galp3b0VsbnVFZ2MyVXR1MGhSY05NClV6WDMyQW1YSENrRW5DblUxemlDREFnWE5JeTIwZ0hLMm1wdm03cnN5eFhwOWQzQm1QdC9xSk1BM1hnazhjclIKc3EwUmV0dXZOUFFwYmZjeTJ2TVB2WUNVWllFQ1g3UzBpZUZvcGFhYmNleExwWFc3MXBwYkNZaHdQZ05Rc0ZrcgppcjFHRVJUSml2alRUeFN5bVN3dTBIRzA3NlRleWZBbW13dWdjYmc3Q3g0NXU2TUtCSXFobU1YWHVCcm9xUGEwCk16diswcHRGaWVQbi9WcDV1a09jUU1waTVSWXVKQjh4UGVueFV6MGJ4anUrMzM4YndjUmtrUUlEQVFBQm96VXcKTXpBT0JnTlZIUThCQWY4RUJBTUNCYUF3RXdZRFZSMGxCQXd3Q2dZSUt3WUJCUVVIQXdJd0RBWURWUjBUQVFILwpCQUl3QURBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQTBkL2dJREExQ2lUaFBseDFWN2sweDBnRGxsVkhYdlNKCml5VmVEN3VqekNpY1dvTmZiTmtXOUdReDN5NVJVUXFQS1BEb3JLYmtWYWJLMkRzZnBscHcxTW9IdEVBeWFkTUwKSm1ERkVhMVUxUDczNVJ6U3RsRVp1ZlYyQnZ3SERxKzRyZmRqbGc5czA3SUxtMWRxaWxoVEdEdU53UnkvenkrUgpaYmpjZDI2M3E5R3JNbGgrUVpzYnNLWW0wWWdmRHRWekFuc2ZrWitSYldNUVNaVm1zc3p5WFYrQlVYL2F3SGxBCm1mTllJTGVDak5GdHR6c3JxSTdpNW0zSEZ5aDgrWHF4c2hBMmJDTW8yMk4wYnNQc0pzb25RWXRBSVczci9VUEYKV2NTRmtzQndkU0NZY3piZFRiamg1Q0I0eGZUdTFEeUs0OUk3b2g0dFYzVEgrc0VJQlp0TGxnPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="),
	// 	ClientKeyData:            []byte("LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBeEdUQXpwbXJGU2EwaExGQzUvREpnUm54ZVp4ZjltOXo3YUpRU1k3b0FHMGJHR0tJCjJYVTVkWEJDZ0lFc1luNFdYODYxNkdtcDAvRmpad29FbG51RWdjMlV0dTBoUmNOTVV6WDMyQW1YSENrRW5DblUKMXppQ0RBZ1hOSXkyMGdISzJtcHZtN3JzeXhYcDlkM0JtUHQvcUpNQTNYZ2s4Y3JSc3EwUmV0dXZOUFFwYmZjeQoydk1QdllDVVpZRUNYN1MwaWVGb3BhYWJjZXhMcFhXNzFwcGJDWWh3UGdOUXNGa3JpcjFHRVJUSml2alRUeFN5Cm1Td3UwSEcwNzZUZXlmQW1td3VnY2JnN0N4NDV1Nk1LQklxaG1NWFh1QnJvcVBhME16diswcHRGaWVQbi9WcDUKdWtPY1FNcGk1Ull1SkI4eFBlbnhVejBieGp1KzMzOGJ3Y1Jra1FJREFRQUJBb0lCQVFDVUljcXNDb3hZYjlGSgpKTXJxVjF3bDNJT2V6cXd6SE8yOEYrbW5FZnM4RncrUTNRR0x4RGVLdFJuMEEzcU83N3ZBbUJIdE00VzlMeDFpCjR0T0REYmRza0x2VEhoa3luWlE4VDBDWjJ1SDNnNWpPa1Y3UTF2YUFUTG4wRVE3MGFCV3htUWFGMkFBelRsd2gKN3huUFlpTnY2ekdEMnROQzdWQXVEUXhhTnNsNGpqOFY1eVE2M0xDR09iQUx2S0lKc2x5NXlCR2MvclpxOGhDNgptY2tLZ0l5MmRKdEIwK2YrcmcxWmtqbG5HRnRTdjI2T05TQ1VQL0JBZEgzTFRUYUc5d1E3aGVOZllqQzh0WUMxCnVjeXdSamhWSFY2OWhNdWY5OVMrLzc1dmJyOUdJRTFDcGZFdmRSRHd6Nlo5UzZBMXVIRk1aSXlOR1dib3hFL2wKNmc3Y3NlNkJBb0dCQU9pazBLak5COGVuLyt1UHVQalBFNWFBVFFHVlJhTkNHRXZReklVRTgyTDlJcFhQdTY3dgptdlM2UGJJSGVsRStyTWdWT3hLWkxKYkdUTWVmMkVuZ1lqOU5BYldQZlRZREdWNkdvaEM5R3cxSEkxTjVWNXpTCkVwdzRUVGVDU01FT21xUzJURzQ5eXI5elRpa0VCUWdlUUVXbmFMS01nSCtxaHlaQk1qNjJEcHoxQW9HQkFOZ2MKUlFWc3FveWkrZzl1UTIzckxJb21ZLzUzZjN4M1lGanNneFErVzZidXIyemExUnVyZjh4Mnd3TVFtSmZQaVB0SgpreDNHdlJNTGtkdDB4L2t4dlQ0QmkvbGJiWVhpNS80VEx2TURKS0RRVE53RmtmempyTmVhWUVVNXpIUmhtZlBCCndZQ3FZdWIyMUhvY3pJMWlyQXhxMlIxZjZwNVZrVUNicmhPVEx5ZXRBb0dBVUxub0lickxpVTlWY1pMMGwzbWIKald6Rnk5ZlZTenBESGdPOUJDZGNvU3UvVllhNDFKSVdEZmVXTXZGL1V6UFJWcmh2UUJ2Z3FnenpWWTIweXFYTwowYkpSOW9OczZsSVcrb0x6TjZXMi9sdUIrWlF3ZjUweGtmM0RaWkNTMkZMTi9IdTVkOE4vV0FHVnpJdTFoMFNmCi9zdUJlL3RmRjIyLzZkbFRxd2tYZHdVQ2dZRUFtSWNEVS92Sk42K0RqRWFIZ3RuOE9wa3o5Qk1GUUtURXRKNWgKT1hWMW5KRlQ4U0ZXVGN3eVMrMzZYM3hrSnFtTWhjYjg5WVFpU0lIZTlTUXNTNzRHVWZBbmlkdzBwYzFyYmRDKwpUemdGcnhhMVdJajU2NklKaUxabGdoWjBMaVFBMDZFSjRMVGhUeUFoQVBxNGlJVis1dGkyMmx1ckxRczVsSDhNClVyYU1EcFVDZ1lCYkZSVWYrdm9HWjMzeFpibExWUU4yS0hzclRQTUJCTGxHTzErWmhJOENTS1BWbHRUOTV2aXkKcFRMc0swalRyTjNzMEFmb2RYeDI1NGlzOTNlMzJqM1NsY1dBempicGN4NG9UYmZMdER2TXliR3d4ZVRjTWd0YQphQ0d4MldEa0pJSHdVNVhiUmlGaUdBYjZ2VmtER2JpbTl4ZmcrcGFack5RL3h1RGIycDdxc1E9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo="),
	// }
	kubeClient, err := kubeutil.NewKubeClient(auth.ClusterURL, auth.CertificateAuthorityData, auth.ClientCertificateData, auth.ClientKeyData)
	if err != nil {
		glog.Errorf("unable to create a new kubernetes client with the configuration %+v\n: %v", auth, err)
		return nil, err
	}
	return kubeClient, nil
}

func openStream(client kubernetes.Interface, namespace, podID string, logOptions *v1.PodLogOptions) (io.ReadCloser, error) {
	return client.CoreV1().RESTClient().Get().
		Namespace(namespace).
		Name(podID).
		Resource("pods").
		SubResource("log").
		VersionedParams(logOptions, scheme.ParameterCodec).Stream()
}

func GetLogs(client kubernetes.Interface, namespace string, podID string, container string) (io.ReadCloser, error) {
	logOptions := &v1.PodLogOptions{
		Container:  container,
		Follow:     true,
		Timestamps: true,
	}
	logStream, err := openStream(client, namespace, podID, logOptions)
	return logStream, err
}
